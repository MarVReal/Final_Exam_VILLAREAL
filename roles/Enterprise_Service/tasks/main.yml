###   ENTERPRISE SERVICE(ELK STACK)   ###
#ELASTIC SEARCH#
- name: Import the Elastic Key (Ubuntu)
  apt_key:
    url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    state: present
  when: ansible_distribution == "Ubuntu"

- name: Import Elastic Key (CentOS)
  become: true
  rpm_key:
    key: "https://artifacts.elastic.co/GPG-KEY-elasticsearch"
    state: present
  when: ansible_distribution == "CentOS"

- name: Install and add elastic apt repo (Ubuntu)
  lineinfile:
    path: /etc/apt/sources.list.d/elastic.list
    state: present
    create: true
    backup: true
    mode: 0644
    owner: root
    group: root
    line: "deb https://artifacts.elastic.co/packages/8.x/apt stable main"
  when: ansible_distribution == "Ubuntu"

- name: Install and add elastic rpm repo (CentOS)
  lineinfile:
    path: /etc/yum.repos.d/elastic.repo
    state: present
    create: true
    backup: true
    mode: 0644
    owner: root
    group: root
    line: "baseurl=https://artifacts.elastic.co/packages/8.x/yum"
  when: ansible_distribution == "CentOS"

- name: Install and add curator apt repo (Ubuntu)
  lineinfile:
    path: /etc/apt/sources.list.d/elastic.list
    state: present
    create: true
    backup: true
    mode: 0644
    owner: root
    group: root
    line: "deb [arch=amd64] https://packages.elastic.co/curator/5/debian stable main"
  when: ansible_distribution == "Ubuntu"

- name: Install and add curator rpm repo
  lineinfile:
    path: /etc/yum.repos.d/elastic.rpo
    state: present
    create: true
    backup: true
    mode: 0644
    owner: root
    group: root
    line: "baseurl=https://packages.elastic.co/curator/5/centos/7"
  when: ansible_distribution == "CentOS"

- name: Install elasticsearch (Ubuntu)
  apt:
    name:
      - elasticsearch
      - elasticsearch-curator
    state: present
    update_cache: yes
  when: ansible_distribution == "Ubuntu"

- name: Install elasticsearch (CentOS)
  become: true
  yum:
    name:
      - elasticsearch
    enablerepo: elasticsearch
    state: present
    update_cache: yes
  when: ansible_distribution == "CentOS"

- name: Configuring cluster.name
  replace:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: '#cluster.name: my-application'
    replace: 'cluster.name: Villareal_cluster'

- name: Configuring node.name
  replace:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: '#node.name: node-1'
    replace: 'node.name: node-1'

- name: Configuring http.port
  replace:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: '#http.port: 9200'
    replace: 'http.port: 9200'

- name: Configuring network.host
  replace:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: 'xpack.security.enabled: true'
    replace: 'xpack.security.enabled: false'

- name: Enabling ElasticSearch Service
  service:
    name: elasticsearch
    enabled: yes

- name: Modifying service file
  replace:
    path: /usr/lib/systemd/system/elasticsearch.service
    regexp: "TimeoutStartSec=75"
    replace: "TimeoutStartSec=300"

- name: Opening port for elastic search (CentOS)
  become: true
  shell: |
    firewall-cmd  --permanent --zone=public -add-port=9200/tcp
    sleep 10
    firewall-cmd --reload
  when: ansible_distribution == "CentOS"

- name: Opening port for elastic search (Ubuntu)
  become: true
  ufw:
    rule: allow
    port: "9200"
    comment: "Allow Elasticsearch"
  when: ansible_distribution == "Ubuntu"

- name: Enabling elasticseach service
  shell: |
    systemctl enable elasticsearch.service
    sleep 10
    systemctl start elasticsearch.service

#KIBANA#
- name: Adding kibana to the RPM repository (CentOS)
  copy:
    src: kibana.repo
    dest: /etc/yum.repos.d/kibana.repo
    owner: root
    group: root
    mode: 777
  when: ansible_distribution == "CentOS"

- name: Adding Kibana to the APT repository (Ubuntu)
  copy:
    src: kibana.repo
    dest: /etc/apt/sources.list.d/kibana.repo
    owner: root
    group: root
    mode: 777
  when: ansible_distribution == "Ubuntu"

- name: Install Kibana
  package:
    name: kibana
    state: latest

- name: Updating the repository once again
  package:
    name: kibana
    state: latest

- name: Ensure Kibana is started and enabled at boot
  service:
    name: kibana
    state: started
    enabled: true


- name: Configuring server.port
  replace:
    path: /etc/kibana/kibana.yml
    regexp: '#server.port: 5601'
    replace: 'server.port: 5601'

- name: Configuring server.hosts
  replace:
    path: /etc/kibana/kibana.yml
    regexp: '#server.hosts: "localhosts"'
    replace: 'server.hosts: "localhosts"'

- name: Configuring elasticsearch.host
  replace:
    path: /etc/kibana/kibana.yml
    regexp: '#elasticsearch.hosts: ["http://localhosts:9200"]'
    replace: 'elasticsearch.hosts: ["http://localhosts:9200"]'

- name: Opening port for elasticsearch (CentOS)
  firewalld:
    port: 5601/tcp
    permanent: yes
    state: enabled
  when: ansible_distribution == "CentOS"

- name: Opening port for elasticsearch (Ubuntu)
  ufw:
    rule: allow
    port: "5601"
  when: ansible_distribution == "Ubuntu"

- name: Making sure that Kibana is started and enabled
  service:
    name: kibana
    state: restarted
    enabled: true

#LOGSTASH#
- name: Creeating a repo file for Logstash (CentOS)
  copy:
    src: logstash.repo
    dest: /etc/yum.repos.d/logstash.repo
    owner: root
    group: root
    mode: 0777
  when: ansible_distribution == "CentOS"

- name: Creating a repo file for Logstash (Ubuntu)
  copy:
    src: logstash.repo
    dest: /etc/apt/sources.list.d/logstash.repo
    owner: root
    group: root
    mode: 0777
  when: ansible_distribution == "Ubuntu"

- name: Installing Logstash
  package:
    name: logstash
    state: latest

- name: Opening port for Logstash (CentOS)
  become: true
  firewalld:
    port: 9600/tcp
    permanent: true
    state: enabled
  when: ansible_distribution == "CentOS"

- name: Opening port for Logstash (Ubuntu)
  become: true
  ufw:
    rule: allow
    port: "9600"
  when: ansible_distribution == "Ubuntu"

- name: Making sure that logstash is started and enabled
  service:
    name: logstash
    state: restarted
    enabled: true
